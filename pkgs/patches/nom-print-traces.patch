From 738f445082d6d5c8f96701ccd1fe1136a7a47715 Mon Sep 17 00:00:00 2001
From: Daniel Sampliner <samplinerD@gmail.com>
Date: Sun, 31 Mar 2024 16:05:14 -0400
Subject: [PATCH] display trace/warning messages

Fixes issue #128.
---
 lib/NOM/Print.hs  | 15 +++++++++++++++
 lib/NOM/State.hs  |  2 ++
 lib/NOM/Update.hs | 12 ++++++++++++
 3 files changed, 29 insertions(+)

diff --git a/lib/NOM/Print.hs b/lib/NOM/Print.hs
index c48e2a7..0d1bf61 100644
--- a/lib/NOM/Print.hs
+++ b/lib/NOM/Print.hs
@@ -121,6 +121,18 @@ printSections = (upperleft <>) . Text.intercalate (toText (setSGRCode [Reset]) <
 --     (vertical <> " ")
 --     (horizontal <> markup bold " Build Planning:" :| maybeToList message <> (IntMap.elems activities <&> \activity -> unwords (activity.text : ifTimeDiffRelevant now activity.start id)))
 
+printTraces :: Seq Text -> Int -> Text
+printTraces traces maxHeight =
+  prependLines
+    ""
+    (vertical <> " ")
+    (vertical <> " ")
+    (horizontal <> markup (bold . yellow) (" " <> show (length interesting_traces) <> " Traces: ") :| (lines =<< filtered_traces))
+ where
+  interesting_traces = toList traces
+  compact_traces = sum (length . lines <$> interesting_traces) > maxHeight
+  filtered_traces = (if compact_traces then map compactError else id) interesting_traces
+
 printErrors :: Seq Text -> Int -> Text
 printErrors errors maxHeight =
   prependLines
@@ -159,6 +171,7 @@ stateToText config buildState@MkNOMV1State{..} = memo printWithSize . fmap Windo
         $ [
             -- (not (IntMap.null interestingActivities) || isJust evalMessage, printInterestingActivities evalMessage interestingActivities)
             (not (Seq.null nixErrors), const errorDisplay)
+          , (not (Seq.null nixTraces), const traceDisplay)
           , (not (Seq.null forestRoots), buildsDisplay . snd)
           ]
     maxHeight = case maybeWindow of
@@ -171,6 +184,7 @@ stateToText config buildState@MkNOMV1State{..} = memo printWithSize . fmap Windo
         (vertical <> " ")
         (printBuilds buildState hostNums maxHeight now)
     errorDisplay = printErrors nixErrors maxHeight
+    traceDisplay = printTraces nixTraces maxHeight
   -- evalMessage = case evaluationState.lastFileName of
   --   Strict.Just file_name -> Just ("Evaluated " <> show (evaluationState.count) <> " files, last one was '" <> file_name <> "'")
   --   Strict.Nothing -> Nothing
@@ -237,6 +251,7 @@ stateToText config buildState@MkNOMV1State{..} = memo printWithSize . fmap Windo
   finishMarkup
     | numFailedBuilds > 0 = markup red . ((warning <> " Exited after " <> show numFailedBuilds <> " build failures") <>)
     | not (null nixErrors) = markup red . ((warning <> " Exited with " <> show (length nixErrors) <> " errors reported by nix") <>)
+    | not (null nixTraces) = markup yellow . ((warning <> " Finished with " <> show (length nixTraces) <> " traces reported") <>)
     | otherwise = markup green . ("Finished" <>)
   printHosts :: [NonEmpty Entry]
   printHosts =
diff --git a/lib/NOM/State.hs b/lib/NOM/State.hs
index b78a11d..02b1d58 100644
--- a/lib/NOM/State.hs
+++ b/lib/NOM/State.hs
@@ -207,6 +207,7 @@ data NOMV1State = MkNOMV1State
   , touchedIds :: DerivationSet
   , activities :: IntMap ActivityStatus
   , nixErrors :: Seq Text
+  , nixTraces :: Seq Text
   , buildPlatform :: Strict.Maybe Text
   , interestingActivities :: IntMap InterestingActivity
   , evaluationState :: EvalInfo
@@ -264,6 +265,7 @@ initalStateFromBuildPlatform platform = do
       mempty
       mempty
       mempty
+      mempty
       (Strict.toStrict platform)
       mempty
       MkEvalInfo{count = 0, at = 0, lastFileName = Strict.Nothing}
diff --git a/lib/NOM/Update.hs b/lib/NOM/Update.hs
index bdf60aa..7e962e1 100644
--- a/lib/NOM/Update.hs
+++ b/lib/NOM/Update.hs
@@ -224,6 +224,18 @@ processJsonMessage = \case
           whenJust
             (snd <$> parseOneText Parser.oldStyleParser (stripped <> "\n"))
             (\old_style_parse_result -> void $ processResult old_style_parse_result)
+  Message MkMessageAction{message, level = Error}
+    | stripped <- stripANSICodes message
+    , Text.isPrefixOf "trace:" stripped ->
+        {-# SCC "pass_through_error" #-}
+        withChange do
+          traces <- gets (.nixTraces)
+          unless (any (Text.isInfixOf (Text.drop 7 stripped) . stripANSICodes) traces) do
+            modify' (gfield @"nixTraces" %~ (<> (message Seq.<| mempty)))
+            tell [Right (encodeUtf8 message)]
+          whenJust
+            (snd <$> parseOneText Parser.oldStyleParser (stripped <> "\n"))
+            (\old_style_parse_result -> void $ processResult old_style_parse_result)
   Message MkMessageAction{message} | Just suffix <- Text.stripPrefix "evaluating file '" message -> withChange do
     let file_name = Text.dropEnd 1 suffix
     now <- getNow

