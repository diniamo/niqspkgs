name: Build to Cachix

on:
  push:
    branches: [main]

jobs:
  packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Find packages missing in the cache
        id: get-packages
        run: |
          set -euo pipefail

          packages='[]'
          while read -r package; do
            path="$(nix eval --raw ".#$package" --extra-experimental-features pipe-operators &>/dev/null)"
            if ! nix path-info --store https://niqspkgs.cachix.org "$path" &>/dev/null; then
              echo "Building $package"
              packages="$(echo -n "$packages" | jq --arg package "$package" --compact-output '. + [$package]')"
            fi
          done < <(nix flake show --json --extra-experimental-features pipe-operators 2>/dev/null | jq --raw-output '.packages."x86_64-linux" | keys_unsorted | map("packages.x86_64-linux.\(.)") | .[]')

          echo -n "packages=$packages" >> "$GITHUB_OUTPUT"

  build:
    needs: packages
    strategy:
      matrix:
        package: ${{ fromJSON(needs.packages.outputs.packages) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: niqspkgs
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - run: nix build --print-build-logs "github:diniamo/niqspkgs/${{ github.ref }}#${{ matrix.package }}" --extra-experimental-features pipe-operators
